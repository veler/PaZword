<Page
    x:Name="RootPage"
    x:Class="PaZword.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:PaZword.Core.UI.Converters"
    xmlns:appmodel="using:Windows.ApplicationModel"
    xmlns:ui="using:PaZword.Core.UI"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:models="using:PaZword.Api.Models" xmlns:controls="using:PaZword.Core.UI.Controls"
    mc:Ignorable="d"
    DataContext="{Binding Path=MainPage, Source={StaticResource ViewModelLocator}}">

    <Page.Resources>
        <converters:CategoryIconToBitmapImageConverter x:Key="CategoryIconToBitmapImageConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" IsInverted="True"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <controls:CustomNavigationView
            x:Name="NavigationView"
            MenuItemsSource="{x:Bind ViewModel.Categories, Mode=OneWay}"
            SelectedItem="{x:Bind ViewModel.SelectedMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            OverlayVisible="{x:Bind ViewModel.CommonViewModel.IsEditing, Mode=OneWay}">
            <controls:CustomNavigationView.MenuItemTemplate>
                <DataTemplate x:DataType="models:Category">
                    <StackPanel Orientation="Horizontal" AutomationProperties.Name="{x:Bind Name, Mode=OneWay}">
                        <Image x:Name="IconBox"
                            Margin="0,16,16,16"
                            Height="16"
                            Width="16"
                            Source="{x:Bind Icon, Converter={StaticResource CategoryIconToBitmapImageConverter}, Mode=OneWay}"/>
                        <TextBlock
                            Margin="0,16"
                            Text="{x:Bind Name, Mode=OneWay}"
                            Foreground="{ThemeResource NavigationViewItemForeground}"/>
                    </StackPanel>
                </DataTemplate>
            </controls:CustomNavigationView.MenuItemTemplate>
            <controls:CustomNavigationView.MenuItemContainerStyle>
                <Style TargetType="NavigationViewItem">
                    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}"/>
                    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}"/>
                    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}"/>
                    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                    <Setter Property="UseSystemFocusVisuals" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="MinHeight" Value="48"/>
                    <Setter Property="MinWidth" Value="48"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="NavigationViewItem">
                                <Grid 
                                    x:Name="LayoutRoot"
                                    Background="{TemplateBinding Background}"
                                    Height="{TemplateBinding MinHeight}"
                                    Control.IsTemplateFocusTarget="True"
                                    ToolTipService.ToolTip="{TemplateBinding Content}">
                                    <Grid.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem 
                                                Text="{Binding Path=MainPage.Strings.Rename, Source={StaticResource ViewModelLocator}}"
                                                DataContext="{TemplateBinding Content}"
                                                Command="{Binding Path=MainPage.RenameCategoryCommand, Source={StaticResource ViewModelLocator}}"
                                                CommandParameter="{TemplateBinding Content}">
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem 
                                                Text="{Binding Path=MainPage.Strings.Delete, Source={StaticResource ViewModelLocator}}"
                                                DataContext="{TemplateBinding Content}"
                                                Command="{Binding Path=MainPage.DeleteCategoryCommand, Source={StaticResource ViewModelLocator}}"
                                                CommandParameter="{TemplateBinding Content}">
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </Grid.ContextFlyout>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="PointerStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}"/>
                                                    <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPointerOver}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed"/>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}"/>
                                                    <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPressed}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Selected">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}"/>
                                                    <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelected}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="PointerOverSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}"/>
                                                    <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelectedPointerOver}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="PressedSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed"/>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}"/>
                                                    <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelectedPressed}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="DisabledStates">
                                            <VisualState x:Name="Enabled"/>
                                            <VisualState x:Name="Disabled">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="PaneStates">
                                            <VisualState x:Name="NotClosedCompact"/>
                                            <VisualState x:Name="ClosedCompact">
                                                <VisualState.Setters>
                                                    <Setter Target="RevealBorder.HorizontalAlignment" Value="Left"/>
                                                    <Setter Target="RevealBorder.Width" Value="{Binding CompactPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="IconStates">
                                            <VisualState x:Name="IconVisible"/>
                                            <VisualState x:Name="IconCollapsed">
                                                <VisualState.Setters>
                                                    <Setter Target="IconBox.Visibility" Value="Collapsed"/>
                                                    <Setter Target="IconColumn.Width" Value="16"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Rectangle 
                                            x:Name="SelectionIndicator" 
                                            Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                            Height="{TemplateBinding MinHeight}"
                                            Opacity="0.0"
                                            Width="{ThemeResource NavigationViewSelectionIndicatorWidth}"/>
                                    </Grid>
                                    <Border x:Name="RevealBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                                    <Grid HorizontalAlignment="Left" Height="{TemplateBinding MinHeight}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconColumn" Width="{TemplateBinding MinWidth}"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Viewbox x:Name="IconBox" Child="{TemplateBinding Icon}" Margin="16,12"/>
                                        <ContentPresenter 
                                            x:Name="ContentPresenter" 
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}" 
                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                            Grid.Column="1" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </controls:CustomNavigationView.MenuItemContainerStyle>
            <controls:CustomNavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    x:Name="SearchBox"
                    RequestedTheme="Dark"
                    PlaceholderText="{x:Bind ViewModel.Strings.Search}"
                    QueryIcon="Find"
                    Text="{x:Bind ViewModel.CommonViewModel.SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Behaviors>
                        <ui:EventToCommandBehavior 
                            Event="TextChanged"
                            Command="{x:Bind ViewModel.AutoSuggestBoxTextChangedCommand}" 
                            PassArguments="false"/>
                    </i:Interaction.Behaviors>
                    <AutoSuggestBox.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="F"
                            Modifiers="Control"
                            Invoked="SearchBoxKeyboardAccelerator_Invoked"/>
                    </AutoSuggestBox.KeyboardAccelerators>
                </AutoSuggestBox>
            </controls:CustomNavigationView.AutoSuggestBox>
            <controls:CustomNavigationView.PaneFooter>
                <StackPanel>
                    <NavigationViewItem
                        Style="{StaticResource NavigationViewItemStyle}"
                        Icon="Add"
                        Content="{x:Bind ViewModel.Strings.AddACategory}"
                        AutomationProperties.Name="{x:Bind ViewModel.Strings.AddACategory}">
                        <i:Interaction.Behaviors>
                            <ui:EventToCommandBehavior 
                                Event="KeyDown" 
                                Command="{x:Bind ViewModel.AddACategoryNavigationViewItemKeyDownCommand}" 
                                PassArguments="True"/>
                            <ui:EventToCommandBehavior 
                                Event="Tapped" 
                                Command="{x:Bind ViewModel.AddACategoryNavigationViewItemTappedCommand}" 
                                PassArguments="False"/>
                        </i:Interaction.Behaviors>
                        <NavigationViewItem.KeyboardAccelerators>
                            <KeyboardAccelerator
                                Key="N"
                                Modifiers="Control,Shift">
                                <i:Interaction.Behaviors>
                                    <ui:EventToCommandBehavior 
                                        Event="Invoked"
                                        Command="{x:Bind ViewModel.AddACategoryNavigationViewItemTappedCommand}" 
                                        PassArguments="False"/>
                                </i:Interaction.Behaviors>
                            </KeyboardAccelerator>
                        </NavigationViewItem.KeyboardAccelerators>
                    </NavigationViewItem>
                </StackPanel>
            </controls:CustomNavigationView.PaneFooter>
            <i:Interaction.Behaviors>
                <ui:EventToCommandBehavior 
                    Event="ItemInvoked" 
                    Command="{x:Bind ViewModel.NavigationViewItemInvokedCommand}" 
                    PassArguments="True"/>
                <ui:EventToCommandBehavior 
                    Event="OverlayTapped" 
                    Command="{x:Bind ViewModel.CommonViewModel.EditingOverlayClickedCommand}" 
                    PassArguments="False"/>
            </i:Interaction.Behaviors>

            <Frame x:Name="ContentFrame" IsTabStop="False"/>
        </controls:CustomNavigationView>

        <!-- Title bar's title -->
        <TextBlock
            RequestedTheme="Dark"
            Style="{ThemeResource CaptionTextBlockStyle}"
            VerticalAlignment="Top"
            HorizontalAlignment="Left"
            Visibility="{x:Bind NavigationView.IsPaneOpen, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
            Margin="{Binding TitleBar.TitlePosition, Mode=OneWay, Source={StaticResource ViewModelLocator}}"
            Text="{x:Bind appmodel:Package.Current.DisplayName}"/>
        <controls:SynchronizationIndicator/>
    </Grid>
</Page>
